#!groovy

properties([ parameters([
  string( name: 'SCRIPTS_REPO', defaultValue: ''),
  string( name: 'MODULES_REPO', defaultValue: ''),
  string( name: 'TERRAFORM_REPO', defaultValue: ''),
  string( name: 'TERRAFORM_FOLDER', defaultValue: ''),
  string( name: 'VSPHERE_USER', defaultValue: ''),
  string( name: 'VSPHERE_SERVER', defaultValue: ''),
  password( name: 'VSPHERE_PASSWORD', defaultValue: ''),  
  string( name: 'CRED_ID', defaultValue: ''),
  string( name: 'DEVOPS_CRED_ID', defaultValue: ''),
  string( name: 'VMB_CRED_ID', defaultValue: ''),
  password( name: 'AZ_ACCESS_KEY', defaultValue: ''),
  string( name: 'AZ_STORAGE_ACCOUNT_NAME', defaultValue: ''),
  string( name: 'AZ_CONTAINER_NAME', defaultValue: ''),
  string( name: 'AZ_BLOB_KEY', defaultValue: ''),
  booleanParam( name: 'DESTROY', defaultValue: false),
  string( name: 'COMMIT_ID', defaultValue: '')
]), pipelineTriggers([])])

node{
    stage('Build Repos'){
        dir(SCRIPTS_REPO){
            git url: "https://name.github.com/DevOps/_git/$SCRIPTS_REPO", credentialsId: '<credid>'
        }
        dir(MODULES_REPO){
            git url: "https://name.github.com/Terraform/_git/$MODULES_REPO", credentialsId: '<credid>'
        }
        dir(TERRAFORM_REPO){
            deleteDir()
            git url: "https://name.github.com/Terraform/_git/$TERRAFORM_REPO", credentialsId: '<credid>'
        }

    }
    stage('Copy TF Folder'){
        sh '''#!/bin/bash

            cp -r $WORKSPACE/$TERRAFORM_REPO/$TERRAFORM_FOLDER $WORKSPACE/$TERRAFORM_REPO/$COMMIT_ID

        '''
    }
    stage('Terraform Init'){
        withCredentials([string(credentialsId: "<credID>", variable: 'PW3')]) {
            sh '''#!/bin/sh

                cd $WORKSPACE/$TERRAFORM_REPO/$COMMIT_ID
                
                if [ -d ".terraform" ]; 
                    then rm -r .terraform;
                fi

                export AZ_BLOB_KEY=$TERRAFORM_FOLDER-$TERRAFORM_REPO.terraform.tfstate

                terraform init \
                    -backend-config "access_key=$AZ_ACCESS_KEY" \
                    -backend-config "storage_account_name=$AZ_STORAGE_ACCOUNT_NAME" \
                    -backend-config "container_name=$AZ_CONTAINER_NAME" \
                    -backend-config "key=$AZ_BLOB_KEY"
            '''
        }

    }
    stage('Terraform Plan'){
        withCredentials([string(credentialsId: "<credID>", variable: 'PW3')]) {
            sh '''#!/bin/bash

                cd $WORKSPACE/$TERRAFORM_REPO/$COMMIT_ID
                
                pwd

                export AZ_BLOB_KEY=$TERRAFORM_FOLDER-$TERRAFORM_REPO.terraform.tfstate
                export TF_VAR_vsphere_password=${PW3}
                export TF_VAR_vsphere_user=$VSPHERE_USER
                export TF_VAR_vsphere_server=$VSPHERE_SERVER
                export TF_VAR_az_access_key=$AZ_ACCESS_KEY
                export TF_VAR_az_storage_account_name=$AZ_STORAGE_ACCOUNT_NAME
                export TF_VAR_az_blob_key=$AZ_BLOB_KEY
                export TF_VAR_az_container_name=$AZ_CONTAINER_NAME

                echo "Planning..."

                terraform plan -destroy

            '''
        }
    }
    stage('Terraform Destroy'){
        withCredentials([string(credentialsId: "<credID>", variable: 'PW3')]) {
            sh '''#!/bin/bash

                cd $WORKSPACE/$TERRAFORM_REPO/$COMMIT_ID
                
                pwd

                export AZ_BLOB_KEY=$TERRAFORM_FOLDER-$TERRAFORM_REPO.terraform.tfstate
                export TF_VAR_vsphere_password=${PW3}
                export TF_VAR_vsphere_user=$VSPHERE_USER
                export TF_VAR_vsphere_server=$VSPHERE_SERVER
                export TF_VAR_az_access_key=$AZ_ACCESS_KEY
                export TF_VAR_az_storage_account_name=$AZ_STORAGE_ACCOUNT_NAME
                export TF_VAR_az_blob_key=$AZ_BLOB_KEY
                export TF_VAR_az_container_name=$AZ_CONTAINER_NAME

                echo "Destroying..."

                #terraform destroy -force

            '''
        }
    }
    stage('Results and Update Azure Table'){
        withCredentials([string(credentialsId: "<credID>", variable: 'PW3')]) {
            sh '''#!/bin/bash
                
                cd $WORKSPACE/$TERRAFORM_REPO/$COMMIT_ID

                export TF_VAR_az_blob_key=$AZ_BLOB_KEY

                echo "State File: $TF_VAR_az_blob_key"
                echo "Commit ID: $COMMIT_ID"

                export AZURE_STORAGE_ACCESS_KEY=$AZ_ACCESS_KEY
                export AZURE_STORAGE_ACCOUNT=$AZ_STORAGE_ACCOUNT_NAME

                export TF_OUTPUT_VMNAME=$(terraform output vmName)

                #az storage entity merge -t <tablename> -e PartitionKey=$COMMIT_ID RowKey=$TF_OUTPUT_VMNAME  STATUS="DESTROYED"

            '''
        }
    }
}